//
//  FirstViewController.m
//  TheMap
//
//  Created by Ivan Lugo on 1/14/14.
//  Copyright (c) 2014 Ivan Lugo. All rights reserved.
//

#import "FirstViewController.h"
#import <Mapbox/Mapbox.h>

@interface FirstViewController ()

@property (nonatomic, strong) NSMutableArray *shapes;
@property (nonatomic, strong) NSMutableArray *shapes2;
@property (nonatomic, strong) NSMutableArray *points;
@property (nonatomic, strong) UITapGestureRecognizer *tapGestureRecognizer;
//@property (strong, nonatomic) RMMapView *mapView;

@end

@implementation FirstViewController

- (void)viewDidLoad
{
    [super viewDidLoad];
    NSString *mapID = @"ivanlugo.gp0o968d";
    RMMapboxSource *tileSource = [[RMMapboxSource alloc] initWithMapID:mapID];
    RMMapView *mapView = [[RMMapView alloc] initWithFrame:self.view.bounds andTilesource:tileSource];
    
    // delegate questions
    mapView.delegate = self;
    
    // does this 'draw' the map to the screen?
    
    [self.view addSubview:mapView];
    
    NSString *jsonPath = [[NSBundle mainBundle] pathForResource:@"shape" ofType:@"geojson"];
    NSDictionary *json = [NSJSONSerialization JSONObjectWithData:[[NSData alloc] initWithContentsOfFile:jsonPath]
                                                         options:0
                                                           error:nil];
    
    // creates an array from the json file of points
    self.points = [[[[json objectForKey:@"features"] objectAtIndex:0] valueForKeyPath:@"geometry.coordinates"] mutableCopy];
    
    
    // iterate through the points?
    for (NSUInteger i = 0; i < [self.points count]; i++)
        [self.points replaceObjectAtIndex:i
                               withObject:[[CLLocation alloc] initWithLatitude:[[[self.points objectAtIndex:i] objectAtIndex:1] doubleValue]
                                                                     longitude:[[[self.points objectAtIndex:i] objectAtIndex:0] doubleValue]]];
    
    RMAnnotation *annotation = [[RMAnnotation alloc] initWithMapView:mapView
                                                          coordinate:mapView.centerCoordinate
                                                            andTitle:@"My Path"];
    
    [mapView addAnnotation:annotation];
    
    [annotation setBoundingBoxFromLocations:self.points];
    
    mapView.centerCoordinate = CLLocationCoordinate2DMake(45.526795, -122.682953);
    
    mapView.zoom = 4;
    
    /*------- my code
    // creates an array from the json file of points
    NSInteger numShapes = [[json objectForKey:@"features"] count];
    self.shapes2 = [NSMutableArray arrayWithCapacity:numShapes];
    
    for(NSInteger i = 0; i < numShapes; i++)
    {
        [self.shapes2 addObject:[[[json objectForKey:@"features"] objectAtIndex:i] mutableCopy]];
    }
    
    
    
    // replace the coordinates of each with doubles
    CLLocation *l =
    [[CLLocation alloc] initWithLatitude: [[[[self.shapes objectAtIndex:0] objectAtIndex:2] objectAtIndex:1] doubleValue]
                               longitude: [[[[self.shapes objectAtIndex:0] objectAtIndex:2] objectAtIndex:0] doubleValue]];

    [[[self.shapes2 objectAtIndex:0] objectAtIndex:0] replaceObjectAtIndex:0 withObject: l];
    
    
    self.shapes = [[[[json objectForKey:@"features"] objectAtIndex:0] valueForKeyPath:@"geometry.coordinates"] mutableCopy];
    [self.shapes addObject:[[[[json objectForKey:@"features"] objectAtIndex:1] valueForKeyPath:@"geometry.coordinates"] mutableCopy]];
    [self.shapes addObject:[[[[json objectForKey:@"features"] objectAtIndex:2] valueForKeyPath:@"geometry.coordinates"] mutableCopy]];
    [self.shapes addObject:[[[[json objectForKey:@"features"] objectAtIndex:3] valueForKeyPath:@"geometry.coordinates"] mutableCopy]];
    [self.shapes addObject:[[[[json objectForKey:@"features"] objectAtIndex:4] valueForKeyPath:@"geometry.coordinates"] mutableCopy]];
     */
    
    /*---more code that is mine
    
     
    
    for(NSUInteger i = 0; i < [self.shapes count]; i++)
    {
        for(NSUInteger j = 0; j < [[self.shapes objectAtIndex:i ] count]; j++)
        {
            CLLocation *l = [[CLLocation alloc] initWithLatitude: [[[[self.shapes objectAtIndex:i] objectAtIndex:j] objectAtIndex:1] doubleValue]
                                                      longitude: [[[[self.shapes objectAtIndex:i] objectAtIndex:j] objectAtIndex:0] doubleValue]];
            [[self.shapes objectAtIndex:i] replaceObjectAtIndex:j
                                                     withObject: l];
        }
            
    }
    
    mapView.centerCoordinate = CLLocationCoordinate2DMake(28.552, -81.343);
    
    RMAnnotation *annotation = [[RMAnnotation alloc] initWithMapView:mapView
                                                          coordinate:mapView.centerCoordinate
                                                            andTitle:@"My Path"];
    
    [mapView addAnnotation:annotation];
    
    [annotation setBoundingBoxFromLocations:self.points];
    
    mapView.zoom = 3;
     
     */
    
    /* Create the Tap Gesture Recognizer */
    self.tapGestureRecognizer = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(handleTaps:)];
    
    /* The number of fingers that must be on the screen */
    self.tapGestureRecognizer.numberOfTouchesRequired = 1;
    /* The total number of taps to be performed before the gesture is recognized */
    self.tapGestureRecognizer.numberOfTapsRequired = 1;
    /* Add this gesture recognizer to our view */
    [self.view addGestureRecognizer:self.tapGestureRecognizer];
    
}

- (void) handleTaps:(UITapGestureRecognizer*)paramSender{
    NSUInteger touchCounter = 0;
    for (touchCounter = 0; touchCounter < paramSender.numberOfTouchesRequired; touchCounter++)
    {
        CGPoint touchPoint = [paramSender locationOfTouch:touchCounter inView:paramSender.view];
        NSLog(@"Touch #%lu: %@", (unsigned long)touchCounter+1, NSStringFromCGPoint(touchPoint));
    }
}

- (RMMapLayer *)mapView:(RMMapView *)mapView layerForAnnotation:(RMAnnotation *)annotation
{
    if (annotation.isUserLocationAnnotation)
        return nil;
    
    RMShape *shape = [[RMShape alloc] initWithView:mapView];
    
    shape.lineColor = [UIColor purpleColor];
    shape.lineWidth = 5.0;
    
    for (CLLocation *point in self.points)
        [shape addLineToCoordinate:point.coordinate];
    
    return shape;
}
 
/*
- (void)viewDidLoad
{
    [super viewDidLoad];
    
    NSString *mapID = @"ivanlugo.gp0o968d";
    CLLocationCoordinate2D home = CLLocationCoordinate2DMake(28.552, -81.343);
    
    RMMapboxSource *onlineSource = [[RMMapboxSource alloc] initWithMapID: mapID];
    // RMMapView *mapView = [[RMMapView alloc] initWithFrame:self.view.bounds andTilesource:onlineSource];
    self.mapView = [[RMMapView alloc] initWithFrame:self.view.bounds
                                            andTilesource:onlineSource
                                            centerCoordinate:home
                                            zoomLevel:10.0
                                            maxZoomLevel:10.0
                                            minZoomLevel:10.0
                                            backgroundImage:NULL];

    
    
    [self.view addSubview:_mapView];
}
 */

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
